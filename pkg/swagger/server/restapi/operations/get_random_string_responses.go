// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRandomStringOKCode is the HTTP code returned for type GetRandomStringOK
const GetRandomStringOKCode int = 200

/*GetRandomStringOK Returns the randomly generated string.

swagger:response getRandomStringOK
*/
type GetRandomStringOK struct {

	/*
	  In: Body
	*/
	Payload *GetRandomStringOKBody `json:"body,omitempty"`
}

// NewGetRandomStringOK creates GetRandomStringOK with default headers values
func NewGetRandomStringOK() *GetRandomStringOK {

	return &GetRandomStringOK{}
}

// WithPayload adds the payload to the get random string o k response
func (o *GetRandomStringOK) WithPayload(payload *GetRandomStringOKBody) *GetRandomStringOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get random string o k response
func (o *GetRandomStringOK) SetPayload(payload *GetRandomStringOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRandomStringOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRandomStringBadRequestCode is the HTTP code returned for type GetRandomStringBadRequest
const GetRandomStringBadRequestCode int = 400

/*GetRandomStringBadRequest Invalid length was provided.

swagger:response getRandomStringBadRequest
*/
type GetRandomStringBadRequest struct {
}

// NewGetRandomStringBadRequest creates GetRandomStringBadRequest with default headers values
func NewGetRandomStringBadRequest() *GetRandomStringBadRequest {

	return &GetRandomStringBadRequest{}
}

// WriteResponse to the client
func (o *GetRandomStringBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
